      <link rel="stylesheet" href="/bootstrap/css/bootstrap.min.css" type="text/css">
      <link rel="stylesheet" href="/sweetalert2/sweetalert2.min.css" type="text/css">
      <link rel="stylesheet" href="/boxicons/boxicons.min.css" type="text/css">
      <link rel="stylesheet" href="/css/navSecretaria.min.css" type="text/css">
      <link rel="stylesheet" href="/css/servicesSec.min.css" type="text/css">

      <link rel="stylesheet" href="/dataTables/theme/bulma.min.css" type="text/css"/>
      <link rel="stylesheet" href="/dataTables/theme/dataTables.bulma.min.css" type="text/css"/>
      <link rel="stylesheet" href="/dataTables/theme/responsive.bulma.min.css" type="text/css"/>
      <link rel="stylesheet" href="/dataTables/dataTablesUI.min.css" type="text/css"/>

      <style>
         .swal2-radio {
            font-size: .9rem;
         }

         .swal2-actions {
            margin-top: .25rem;
         }
      </style>
      
   </head>

	<body>
      {{> loader}}
      {{> navBarS}}

      <div class="container p-30">
         <div class="row">
            <div class="col-md-12 tittleSEC">
               <div class="service__title">ofrendas e intenciones</div>
            </div>
         </div>

         {{!-- <div class="row">
            <div class="col-md-3">
               <button class="btn__Add"><i class='bx bx-add-to-queue bx-tada' ></i> Añadir</button>
            </div>
         </div> --}}

         <div class="row tableUI">
            <div class="col-md-12">
               <table id="listOfrendas" class="table is-striped table-striped table-bordered tableList">
                  <thead>
                     <tr>
                        {{!-- <th scope="col">ID</th> --}}
                        <th scope="col">Tipo</th>
                        <th scope="col">Fecha</th>
                        <th scope="col">Cédula</th>
                        <th nowrap scope="col">Nombres Completos</th>
                        <th scope="col">Teléfono</th>
                        <th scope="col">Estado</th>
                        {{!-- <th scope="col">Teléfono</th> --}}
                        <th scope="col">Acciones</th>
                     </tr>
                  </thead>
               </table>
            </div>
         </div>
      </div>

      {{!-- <br><br> --}}

      <script src="/js/jquery-3.5.1.min.js"></script>
      <script src="/js/popper.min.js"></script>
      <script src="/bootstrap/js/bootstrap.min.js"></script>
      <script src="/sweetalert2/sweetalert2.min.js"></script>
      <script src="/fontawesome/js/all.min.js"></script>
      <script src="/js/navSecretaria.min.js"></script>

      <script src="/dataTables/jquery.dataTables.min.js"></script>
      <script src="/dataTables/theme/dataTables.bulma.min.js"></script>
      <script src="/dataTables/dataTables.responsive.min.js"></script>
      <script src="/dataTables/theme/responsive.bulma.min.js"></script>

      <script>
         $(document).ready(function() {
            listOfrendas = $('#listOfrendas').DataTable({
               destroy: true,
               "ajax": {
                  "url": '/s/getOfrendas',
                  "dataSrc":""
               },
               "columns": [
                  //{"data": "idOfrenda"},
                  {"data": "tipItencion"},
                  {"data": "fechaOf"},
                  {"data": "cedula"},
                  {"data": null,
                        render: function ( data, type, row ) {
                           return row.apellidos + ' ' + row.nombres;
                        }
                  },
                  {"data": "telefono"},
                  {"data": null,
                        render: function ( data, type, row ) {
                           const result = (row.estado === 'Aceptado') 
                                             ?  '<span class="mode badge badge-pill badge-success">Aceptado</span>' 
                                             :  (row.estado === 'No aceptado') 
                                                   ? '<span class="mode badge badge-pill badge-danger">No aceptado</span>' 
                                                   :  (row.estado === 'Pendiente') 
                                                         ? '<span class="mode badge badge-pill badge-warning">Pendiente</span>' 
                                                         : '';
                           return result;
                        }
                  },
                  {"data": null,
                        render: function ( data, type, row ) {
                           const result = (row.tipItencion != 'Ofrenda') 
                                             ?  `<button class="btn__Acc" onclick="changeEstOf('${row.idOfrenda}', 
                                                '${row.estado}')"><i class='bx bx-badge-check bx-tada' ></i></button>`
                                             : '';
                           return result;
                        }
                  },
                  /*{"data": "email"},
                  {"data": "telefono"},
                  {"data": null,
                        render: function ( data, type, row ) {
                           return `<button type="button" class="btnPoint btn btn-sm dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="false" aria-expanded="false"> <i class="fas fa-ellipsis-v" style="margin-right: 5px;"></i> </button> <div class="dropdown-menu 1 menuD"> <a class="dropdown-item" onclick="newCode('${row._id}', '${row.apellidos}', '${row.nombres}')"> <i class="fab fa-buromobelexperte" style="margin-right: 7px;"></i> Código de Verificación </a> <a class="dropdown-item" onclick="changeEstado('${row._id}', '${row.apellidos}', '${row.nombres}', '${row.estado}')"> <i class="fas fa-audio-description" style="margin-right: 7px;"></i> Cambiar Estado </a> <a class="dropdown-item" onclick="newPass('${row._id}', '${row.apellidos}', '${row.nombres}')"> <i class="fas fa-key" style="margin-right: 7px;"></i> Nueva Contraseña </a> <a class="dropdown-item" onclick="changeDatePerson('${row._id}', '${row.apellidos}', '${row.nombres}')"> <i class="fas fa-user-edit" style="margin-right: 7px;"></i> Actualizar Datos </a> </div>`;
                        }
                  },*/
               ],
               responsive: true,
               language: idioma,
            });
         });

         var idioma = {
            "sProcessing":     "Procesando...",
            "sLengthMenu":     "Mostrar _MENU_ registros",
            "sZeroRecords":    "No se encontraron resultados",
            "sEmptyTable":     "Ningún dato disponible en esta tabla =(",
            "sInfo":           "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
            "sInfoEmpty":      "Mostrando registros del 0 al 0 de un total de 0 registros",
            "sInfoFiltered":   "(filtrado de un total de _MAX_ registros)",
            "sInfoPostFix":    "",
            "sSearch":         "Buscar:",
            "sUrl":            "",
            "sInfoThousands":  ",",
            "sLoadingRecords": "Cargando...",
            "oPaginate": {
               "sFirst":    "Primero",
               "sLast":     "Último",
               "sNext":     "Siguiente",
               "sPrevious": "Anterior"
            },
            "oAria": {
               "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
               "sSortDescending": ": Activar para ordenar la columna de manera descendente"
            },
            "buttons": {
               "copy": "Copiar",
               "colvis": "Visibilidad"

            }
         }

         const changeEstOf = async (idOf, estOf) => {
            const inputOptions = new Promise((resolve) => {
               setTimeout(() => {
                  resolve({
                     'Aceptado': 'Aceptar',
                     'No aceptado': 'No aceptar',
                     'Pendiente': 'Pendiente',
                     'Eliminar': 'Eliminar'
                  })
               }, 1000)
            })
            
            Swal.fire({
               title: `CAMBIAR ESTADO`,
               html: `<p style="font-size: 1rem;">Para actualizar el estado de la ofrenda debe elegir las siguientes opciones:</p>`,
               width: 600,
               imageUrl: '/img/SMMIglesia.png',
               imageWidth: 80,
               imageHeight: 100,
               imageAlt: 'SMM Iglesia',
               showCancelButton: true,
               confirmButtonColor: '#049947',
               cancelButtonColor: '#f34943',
               confirmButtonText: 'Sí, actualizar!',
               cancelButtonText: 'No, cancelar!',
               reverseButtons: true,
               focusConfirm: false,
               focusCancel: true,
               allowOutsideClick: false,
               input: 'radio',
               inputOptions: inputOptions,
               inputValidator: (value) => {
                  if (!value) {
                     return Swal.fire({
                        position: 'top-end',
                        imageUrl: '/img/SMMIglesia.png',
                        imageWidth: 80,
                        imageHeight: 100,
                        imageAlt: 'SMM Iglesia',
                        title: 'CAMPOS VACÍOS',
                        html: `<p style="font-size: 1rem;">Debe de seleccionar una opción.</p>`,
                        showConfirmButton: false,
                        timer: 1500,
                        allowOutsideClick: false
                     })
                  } else {
                     if (idOf.trim() === '') {
                        return Swal.fire({
                           position: 'top-end',
                           imageUrl: '/img/SMMIglesia.png',
                           imageWidth: 80,
                           imageHeight: 100,
                           imageAlt: 'SMM Iglesia',
                           title: 'CAMPOS VACÍOS',
                           html: `<p style="font-size: 1rem;">Loa campos no pueden ir vacíos o con espacios</p>`,
                           showConfirmButton: false,
                           timer: 1500,
                           allowOutsideClick: false
                        })
                     } else {
                        bloqueointerface();

                        $.ajax({
                           url: `/s/changeEstOf`,
                           type: 'POST',
                           dataType: 'json',
                           data: {
                              idOf,
                              value
                           }
                        })
                        .done(function(res) {
                           desbloqueointerface();
                           
                           return Swal.fire({
                              title: res.tittle,
                              html: `<p style="font-size: 1rem;">${res.description}</p>`,
                              imageUrl: res.icon,
                              imageWidth: 100,
                              imageHeight: 100,
                              imageAlt: 'SMM Iglesia',
                              allowOutsideClick: false
                           }).then((result) => {
                              if (result.value == true) {
                                 listOfrendas.ajax.reload(null, false);
                              }
                           })

                        })
                        .fail(function() {
                           desbloqueointerface();
                           console.log("Error");
                        });
                     }
                  }
               }
            })
         }

         /*const changeEstOf = (idOf, estOf) => {
            let est = (estOf === 'Aceptado') 
                           ? 'Pendiente'
                           : 'Aceptado';
            Swal.fire({
               title: `CAMBIAR ESTADO`,
               html: `<p style="font-size: 1rem;">¿Deseas actualizar el estado de la ofrenda a <b style="text-transform: uppercase;">${est}</b>?</p>`,
               imageUrl: '/img/SMMIglesia.png',
               imageWidth: 80,
               imageHeight: 100,
               imageAlt: 'SMM Iglesia',
               showCancelButton: true,
               confirmButtonColor: '#049947',
               cancelButtonColor: '#f34943',
               confirmButtonText: 'Sí, actualizar!',
               cancelButtonText: 'No, cancelar!',
               reverseButtons: true,
               focusConfirm: false,
               focusCancel: true,
               allowOutsideClick: false
            }).then((result) => {
               if (result.value == true) {
                  bloqueointerface();

                  $.ajax({
                     url: `/s/changeEstOf`,
                     type: 'POST',
                     dataType: 'json',
                     data: {
                        idOf
                     }
                  })
                  .done(function(res) {
                     desbloqueointerface();
                     
                     Swal.fire({
                        title: res.tittle,
                        html: `<p style="font-size: 1rem;">${res.description}</p>`,
                        imageUrl: res.icon,
                        imageWidth: 100,
                        imageHeight: 100,
                        imageAlt: 'SMM Iglesia',
                        allowOutsideClick: false
                     })

                     listOfrendas.ajax.reload(null, false);
                  })
                  .fail(function() {
                     desbloqueointerface();
                     console.log("Error");
                  });
               }
            })
         }*/
      </script>